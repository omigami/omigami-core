variables:
  PWD: $(Build.SourcesDirectory)
  CONDA_CACHE_DIR: /usr/share/miniconda/envs/omigami/
  SKIP_REDIS_TEST: False
  PREFECT__FLOWS__CHECKPOINTING: True
  REDIS_HOST: localhost
  REDIS_DB: 0
  MLFLOW_SERVER: sqlite:///mlflow.sqlite

trigger:
  - master

pool:
  vmImage: 'ubuntu-latest'
services:
  redis: redis

resources:
  containers:
  - container: redis
    image: redis:5-alpine
    ports:
      - 6379:6379

steps:
- script: echo "##vso[task.prependpath]$CONDA/bin"
  displayName: Add conda to PATH

- task: Cache@2
  displayName: Use cached Anaconda environment
  inputs:
    key: 'conda | "$(Agent.OS)" | requirements/requirements.txt | requirements/requirements_flow.txt | requirements/requirements_flow_pip.txt | requirements/requirements_test.txt | requirements/requirements_test_pip.txt | omigami/spectra_matching/requirements/requirements.txt | omigami/spectra_matching/requirements/requirements_pip.txt | omigami/spectra_matching/ms2deepscore/requirements/requirements.txt | omigami/spectra_matching/ms2deepscore/requirements/requirements_pip.txt | omigami/spectra_matching/spec2vec/requirements/requirements.txt | omigami/spectra_matching/spec2vec/requirements/requirements_pip.txt'
    restoreKeys: |
      python | "$(Agent.OS)"
      python
    path: $(CONDA_CACHE_DIR)
    cacheHitVar: CONDA_CACHE_RESTORED

- bash: |
    export PIP_FIND_LINKS=$(pwd)/libs
    conda create -y -c conda-forge -c nlesc -c bioconda -n omigami python=3.7 \
        --file requirements/requirements.txt \
        --file requirements/requirements_flow.txt \
        --file requirements/requirements_test.txt
    source activate omigami
    pip install -r requirements/requirements_flow_pip.txt \
        -r requirements/requirements_test_pip.txt

    conda install -y -c conda-forge -c nlesc -c bioconda \
        --file omigami/spectra_matching/requirements/requirements.txt
    pip install -r omigami/spectra_matching/requirements/requirements_pip.txt

    conda install -y -c conda-forge -c nlesc -c bioconda \
        --file omigami/spectra_matching/spec2vec/requirements/requirements.txt
    pip install -r omigami/spectra_matching/spec2vec/requirements/requirements_pip.txt

    conda install -y -c conda-forge -c nlesc -c bioconda \
        --file omigami/spectra_matching/ms2deepscore/requirements/requirements.txt
    pip install  -r omigami/spectra_matching/ms2deepscore/requirements/requirements_pip.txt

    pip install -e .  displayName: Create Anaconda environment
  condition: eq(variables.CONDA_CACHE_RESTORED, 'false')

- bash: |
    source activate omigami
    black --check --target-version py37 omigami/authentication
    black --check --target-version py37 omigami/common
    black --check --target-version py37 omigami/spectra_matching
    black --check --target-version py37 omigami/test
  displayName: Check black formatting

- bash: |
   source activate omigami
   pytest \
     --junitxml=junit/test-results.xml \
     --cov=omigami \
     --cov-report=xml \
     --cov-report=html \
     omigami
  displayName: 'Run all tests'
- task: PublishTestResults@2
  condition: succeededOrFailed()
  inputs:
    testResultsFiles: '**/test-*.xml'
    testRunTitle: 'Publish test results for Omigami'
- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml'
    reportDirectory: '$(System.DefaultWorkingDirectory)/**/htmlcov'