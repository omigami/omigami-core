# This is a basic workflow to help you get started with Actions

name: Register Flow

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
  
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7.10

      - name: Install dependencies
        uses: fdiblen/anaconda-action@0.1.7
        with:
          envName: spec2vec_mlops
          envFileName: 'requirements/environment.frozen.yaml'
          pythonVersion: 3.7.10
          activateEnv: 'true'
          
      - name: Set prefect server
        run: |
            prefect backend server && \
            echo "PREFECT__CLOUD__API=${{ secrets.PREFECT_SERVER_API }}" >> $GITHUB_ENV
            
      - name: Register model deployment flow
        run: |
          python spec2vec_mlops/flows/training_flow.py register-train-pipeline
 
#       Important: The code below cannot be executed yet because the above command already registers AND runs the flow
#       - name: Get commit sha
#         id: vars
#         run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

#       - name: Run deployment flow
#         run: |
#           echo Running deployment flow
#           prefect run flow --name model-deployment-pipeline --project mlops-demo \
#             --run-name "commit: ${{ steps.vars.outputs.sha_short }}" --watch
